{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpenses/ExpenseForm.js","components/NewExpenses/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","items","length","map","expenses","id","ExpensesFilter","value","currentYear","onChange","event","filterValue","target","console","log","onFilter","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartdDataPoints","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredtitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expData","Date","onSaveExpense","htmlFor","type","name","min","step","onClick","onCancel","NewExpense","isEditing","setEditing","enteredExpenseData","expenseData","random","onAddExpense","dummy_expenses","App","setExpenses","previousExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb476237.chunk.js","sourcesContent":["import \"../Expenses/ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date-month\">{month}</div>\r\n      <div className=\"expense-date-year\">{year}</div>\r\n      <div className=\"expense-date-day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"../UI/Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n\r\n  return <div  className={classes}>{props.children} </div>;\r\n  \r\n};\r\n\r\nexport default Card;\r\n","import \"../Expenses/ExpenseItem.css\";\r\nimport ExpenseDate from \"../Expenses/ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no Expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expenses) => (\r\n        <ExpenseItem\r\n          key={expenses.id}\r\n          title={expenses.title}\r\n          amount={expenses.amount}\r\n          date={expenses.date}\r\n        />\r\n      ))}{\" \"}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const expenseFilterHandler = (event) => {\r\n    const filterValue = event.target.value;\r\n    console.log(filterValue);\r\n    props.onFilter(filterValue);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select  value={props.currentYear} onChange={expenseFilterHandler}> \r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  console.log(props);\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n      console.log(props.value)\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n    console.log(barFillHeight)\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\"> {props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"../Chart/ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointsValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointsValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart'\r\n\r\nconst ExpensesChart = (props) => {\r\n    const chartdDataPoints = [ \r\n        { label: \"Jan\" , value: 0 },\r\n        { label: \"Feb\" , value: 0 },\r\n        { label: \"Mar\" , value: 0 },\r\n        { label: \"Apr\" , value: 0 },\r\n        { label: \"May\" , value: 0 },\r\n        { label: \"Jun\" , value: 0 },\r\n        { label: \"Jul\" , value: 0 },\r\n        { label: \"Aug\" , value: 0 },\r\n        { label: \"Sep\" , value: 0 },\r\n        { label: \"Oct\" , value: 0 },\r\n        { label: \"Nov\" , value: 0 },\r\n        { label: \"Dec\" , value: 0 },\r\n     ];\r\n     for( const expense of props.expenses ){\r\n        const expenseMonth =  expense.date.getMonth();\r\n        chartdDataPoints[expenseMonth].value += expense.amount;\r\n        \r\n     }\r\n    return (\r\n\r\n        <div>\r\n            <Chart dataPoints = {chartdDataPoints}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpensesChart\r\n\r\n","import { useState } from \"react\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport \"../Expenses/Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  function filterChange(selectedYear) {\r\n    setFilteredYear(selectedYear);\r\n  }\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter currentYear={filteredYear} onFilter={filterChange} />\r\n        <ExpensesChart expenses={filteredExpenses } />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredtitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredtitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  function titleChangeHandler(event) {\r\n    setEnteredTitle(event.target.value);\r\n    /*setUserInut({\r\n      ...userInput, \r\n      enteredtitle: event.target.value\r\n    }) \r\n\r\n     when ever code depends on previous state define afun inside setState\r\n\r\n    setUserInput((previousState) => {\r\n      return { ...previousState, enteredtitle: event.target.value };\r\n    }); */\r\n  }\r\n\r\n  function amountChangeHandler(event) {\r\n    setEnteredAmount(event.target.value);\r\n\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  }\r\n\r\n  function dateChangeHandler(event) {\r\n    setEnteredDate(event.target.value);\r\n\r\n    // setUserInput({ ...userInput, enteredDate: event.target.value });\r\n  }\r\n\r\n  const submitFormHandler = (event) => {\r\n    event.preventDefault();\r\n    const expData = {\r\n      title: enteredtitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    console.log(expData);\r\n    props.onSaveExpense(expData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={submitFormHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={enteredtitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Amount</label>\r\n          <input\r\n            type=\"text\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, {useState} from 'react'\r\nimport ExpenseForm from './ExpenseForm'\r\nimport './NewExpense.css'\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing,setEditing] = useState(false);\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n      const expenseData = {\r\n          ...enteredExpenseData,\r\n          id: Math.random().toString()\r\n      };\r\n      console.log(expenseData);\r\n      props.onAddExpense(expenseData)\r\n      setEditing(false)\r\n    };\r\nconst startEditingHandler = () => {\r\n    console.log(isEditing);\r\n    setEditing(true)\r\n    \r\n}\r\nconst stopEditing = () =>{\r\n    setEditing(false)\r\n}\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n          \r\n            \r\n           { !isEditing && <button onClick= {startEditingHandler}>Add New Expenses</button>} \r\n           {isEditing && <ExpenseForm onSaveExpense = {  saveExpenseDataHandler } onCancel = {stopEditing} />}\r\n            \r\n        </div>\r\n    )\r\n}\r\n \r\nexport default NewExpense\r\n","import React, { useState } from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpenses/NewExpense\";\nconst dummy_expenses = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(dummy_expenses);\n  const addExpenseHandler = (expense) => {\n    setExpenses((previousExpense) => {\n      return [expense, ...previousExpense];\n    });\n }\n  // ALTERNATIVE OF JSX\n\n  /* return React.createElement('div', {},\n  React.createElement(Expenses, { items: expenses})\n  ); */\n\n  return (\n    <div>\n   <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}